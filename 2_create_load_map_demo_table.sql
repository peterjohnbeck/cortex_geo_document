/* 

    Script 2 - First, load the following files into NYC_DATA_STAGE_SSE 
    * Geocoded_Buildings_Sample_Of_50_W_Only_Inspections.csv
    * borough_boundaries_geojson.json into NYC_DATA_STAGE_SSE
    * building_inspections.yaml
    
    The following script will create and populate the initial building table, already geocoded and populated with a few attributes 

    It will also populate a file that defines the boundaries of the "boroughs" of New York and create a function required by the Streamlit app 

    The yaml file is required for Cortex Analyst to transform natural language queries into SQL

*/

USE DATABASE NYC_DATA_V2;
USE SCHEMA SOURCE_DATA_V2;

create or replace TABLE NYC_DATA_V2.SOURCE_DATA_V2.SAMPLE_50_BLDGS_V2 (
	LATITUDE NUMBER(38,8),
	LONGITUDE NUMBER(38,8),
	DISTANCE NUMBER(38,9),
	ADDRESS VARCHAR(16777216),
	BLDG_TYPE VARCHAR(16777216),
	STORIES NUMBER(38,0),
	ELEVATORS NUMBER(38,0),
	GENERAL_CONDITION VARCHAR(16777216),
	AGE NUMBER(38,0),
	OCCUPANCY VARCHAR(16777216),
	BLDG_INSPECTION VARCHAR(16777216),
	INSPECTION_DATE DATE,
	COUNT_OF_BUILDINGS NUMBER(38,0),
	ELECTRICAL_SYSTEM_CONDITION VARCHAR(16777216),
	ELECTRICAL_SYSTEM_DESCRIPTION VARCHAR(16777216),
	ELECTRICAL_REPAIR_COSTS NUMBER(38,0),
	PLUMBING_SYSTEM_CONDITION VARCHAR(16777216),
	PLUMBING_SYSTEM_DESCRIPTION VARCHAR(16777216),
	PLUMBING_REPAIR_COSTS NUMBER(38,0),
	DEMOGRAPHICS VARCHAR(16777216),
	NEIGHBORHOOD VARCHAR(16777216),
	INCOME_RELATIVE_TO_NYC VARCHAR(16777216),
	INCOME NUMBER(38,0)
);

COPY INTO NYC_DATA_V2.SOURCE_DATA_V2.SAMPLE_50_BLDGS_V2
FROM (
    SELECT $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, null, null, null, null, null, null, null, null, null, null, null, null
    FROM @NYC_DATA_V2.SOURCE_DATA_V2.NYC_DATA_STAGE_SSE
)
FILES = ('Geocoded_Buildings_Sample_Of_50_W_Only_Inspections.csv')
FILE_FORMAT = (
    TYPE=CSV,
    SKIP_HEADER=1,
    FIELD_DELIMITER=',',
    TRIM_SPACE=TRUE,
    FIELD_OPTIONALLY_ENCLOSED_BY='"',
    REPLACE_INVALID_CHARACTERS=TRUE,
    DATE_FORMAT=AUTO,
    TIME_FORMAT=AUTO,
    TIMESTAMP_FORMAT=AUTO
)
ON_ERROR=ABORT_STATEMENT;


create or replace TABLE NYC_DATA_V2.SOURCE_DATA_V2.BOROUGH_BOUNDARIES_V2 (
	BOUNDARIES VARIANT
);

COPY INTO NYC_DATA_V2.SOURCE_DATA_V2.BOROUGH_BOUNDARIES_V2
FROM (
    SELECT $1::VARIANT
    FROM @NYC_DATA_V2.SOURCE_DATA_V2.NYC_DATA_STAGE_SSE
)
FILES = ('borough_boundaries_geojson.json')
FILE_FORMAT = (
    TYPE=JSON,
    STRIP_OUTER_ARRAY=TRUE,
    REPLACE_INVALID_CHARACTERS=TRUE,
    DATE_FORMAT=AUTO,
    TIME_FORMAT=AUTO,
    TIMESTAMP_FORMAT=AUTO
)
ON_ERROR=ABORT_STATEMENT;


CREATE OR REPLACE FUNCTION NYC_DATA_V2.SOURCE_DATA_V2.GET_BLDG_INSPECTION_TEXT_V2 ("LAT" NUMBER(38,0), "LON" NUMBER(38,0))
RETURNS VARCHAR
LANGUAGE SQL
AS '
SELECT BLDG_INSPECTION FROM SAMPLE_50_BLDGS_V2 WHERE LATITUDE = LAT AND LONGITUDE = LON
';
